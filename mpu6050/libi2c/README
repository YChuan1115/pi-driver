I2C framework

INSTALL
========
	> make 
	> sudo make install

	this would make a static library file "libi2c.a" at /usr/local/lib/
	include head file "i2c.h" is at /usr/local/include/



i2c_master.h i2c_master.c
=========================
	i2c device auto detect and auto mount framework for IT i2c modules.
	**TODO**




i2c.h i2c.c
===========
i2c protocol layer, which supports the API based on the i2c_platform.h .c to access i2c devices:

	void i2c_start(uint8_t sda_p, uint8_t scl_p);
	void i2c_stop();
	int  i2c_read_data_block(uint8_t i2c_addr,uint8_t reg, uint8_t * buff, uint8_t len );
	int  i2c_write_data_block(uint8_t i2c_addr,uint8_t reg, uint8_t * buff, uint8_t len );
	int  i2c_read_data_block_2(uint8_t i2c_addr,uint8_t reg, uint8_t * buff, uint8_t len );
	int  i2c_read_reg(uint8_t i2c_addr, uint8_t reg, uint8_t * value_ptr);
	int  i2c_write_reg(uint8_t i2c_addr, uint8_t reg, uint8_t value);




i2c_platform.h i2c_platform.c
=============================
i2c GPIO layer which implement the element actions based on the GPIO library (ex: bcm2835):

	I2C_START()
	SDA_UP()          
	SDA_DOWN()        
	SDA_AS_OUT()      
	SDA_AS_IN()       
	SDA_IN_PULL_HIGH()
	SDA_IN_PULL_DOWN()
	SDA_READ_IN()      

	SCL_UP()          
	SCL_DOWN()        
	SCL_AS_OUT()      
	SCL_AS_IN()       
	SCL_IN_PULL_HIGH()
	SCL_IN_PULL_DOWN()
	SCL_READ_IN()      




bcm2835.h bcm2835.h
===================
hardware driver layer which implement the normal GPIO pin functions.

